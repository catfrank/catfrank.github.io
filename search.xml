<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 配置及 Mac 初体验</title>
      <link href="/2025/04/27/Hexo-%E9%85%8D%E7%BD%AE%E5%8F%8A-Mac-%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2025/04/27/Hexo-%E9%85%8D%E7%BD%AE%E5%8F%8A-Mac-%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac-使用体验"><a href="#Mac-使用体验" class="headerlink" title="Mac 使用体验"></a>Mac 使用体验</h2><p>21年1月大二上学期结束花了4899买的荣耀MagicBook Pro（锐龙R5-4600H芯片 + 16G内存 + 512G硬盘），从大学到工作陪伴了我4年多，没出过大问题，只是性能有点不太够用了，随便开几个网页内存就快占满了，噪音虽然不大，但也能听见。在家这段时间也一直想组一台主机，但是考虑到我不长期在家，到时候人走了还是只能带笔记本，就一直没组。</p><p>去年Mac Mini火了一段时间，体积也符合我的要求，能够随身携带，于是前几天在拼多多百亿补贴2979买了Mac Mini(M4芯片 + 16G内存 + 256G硬盘)，价格很香。<br>虽然用了一段时间，但是有些操作还是不顺手，尤其是另一台笔记本是Windows系统。</p><p>第一是键盘不习惯，和Ctrl有关的操作都需要改变之前的键位习惯，大小写切换也是有点恶心。<br>第二是软件不习惯，常用的软件都还是那些，操作也没什么变化，只是有不少开源工具都没有开发Mac版本。<br>第三是系统不习惯，文件管理、软件安装卸载都和Win不完全一样，用久了应该也就没什么问题了。<br>还有一点，我这几天观察了Mac的内存占用，其实和笔记本的占用差不多，只是没有噪音而已，如果开的应用多了可能会卡。目前我主要就是开浏览器，所以暂时没遇到问题。</p><h3 id="键位"><a href="#键位" class="headerlink" title="键位"></a>键位</h3><table><thead><tr><th>Win 键位</th><th>Mac 键位</th></tr></thead><tbody><tr><td><code>Win</code></td><td><code>Command</code></td></tr><tr><td><code>Alt</code></td><td><code>option</code></td></tr></tbody></table><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><table><thead><tr><th>功能</th><th>保存到</th><th>快捷键</th></tr></thead><tbody><tr><td>截图</td><td>剪切板</td><td><code>Ctrl+Command+Shift+4</code></td></tr><tr><td>截图</td><td>文件</td><td><code>Command+Shift+4</code></td></tr><tr><td>全局搜索</td><td>&#x2F;</td><td><code>Command+Space</code></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h2><p><strong>Homebrew</strong> 是 macOS（和 Linux）上最受欢迎的<strong>包管理工具</strong>，用于快速安装、更新和管理各种开发工具、命令行程序、开源软件和依赖库。</p><ol><li>检查是否已安装<br>打开 终端（Terminal）<br>输入以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew --version</span><br></pre></td></tr></table></figure><ul><li>如果已安装：会显示 Homebrew 的版本号（例如 Homebrew 4.2.0）。</li><li>如果未安装：会提示 command not found。</li></ul><ol start="2"><li>Homebrew 的安装<br>安装命令（官方推荐）：<br>在终端运行以下命令（需联网）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>运行以下命令查看 Homebrew 的可执行文件路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> brew</span><br></pre></td></tr></table></figure><p>已安装：通常会返回 <code>/opt/homebrew/bin/brew</code>（Apple Silicon 芯片）或 <code>/usr/local/bin/</code>brew（Intel 芯片）。</p><p>未安装：无输出或提示 <code>brew not found</code>。</p><p>配置环境变量（安装后提示的步骤）：</p><p>Apple Silicon 芯片需将 Homebrew 路径添加到 shell 配置文件中（如 <code>~/.zshrc</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>验证安装成功<br>安装完成后，再次运行 <code>brew --version</code>，确认显示版本号即可。</p><ol start="3"><li>Homebrew 常用命令</li></ol><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>brew list</td><td>查看已安装的软件</td></tr><tr><td>brew upgrade</td><td>更新所有软件</td></tr><tr><td>brew uninstall 软件名</td><td>卸载软件</td></tr><tr><td>brew install 软件名</td><td>安装软件</td></tr></tbody></table><p>简单示例：用 Homebrew 搭建开发环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew install git         <span class="comment"># 安装 Git</span></span><br><span class="line">brew install node        <span class="comment"># 安装 Node.js</span></span><br><span class="line">brew install python      <span class="comment"># 安装 Python</span></span><br><span class="line">brew install --cask visual-studio-code  <span class="comment"># 安装 VS Code</span></span><br></pre></td></tr></table></figure><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p><strong>npm</strong>（Node Package Manager）是 <strong>Node.js 的包管理工具</strong>，用于安装、管理和共享 JavaScript 代码模块（包）。它是开发 JavaScript 项目（如前端、后端、Hexo 博客等）的核心工具之一。</p><ol><li><p>npm 的作用<br>安装第三方库：例如 <code>npm install hexo-cli</code> 安装 Hexo 命令行工具。<br>管理项目依赖：通过 <code>package.json</code> 文件记录项目所需的包及其版本。<br>运行脚本：例如 <code>npm run start</code> 启动本地服务器。</p></li><li><p>npm 的安装<br>npm 通常随 Node.js 一起安装。</p></li></ol><p>检查是否已安装<br>在终端运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm -v  <span class="comment"># 查看 npm 版本</span></span><br><span class="line">node -v <span class="comment"># 查看 Node.js 版本</span></span><br></pre></td></tr></table></figure><ul><li>如果未安装，会提示 <code>command not found</code>。</li></ul><p>安装 Node.js 和 npm</p><ul><li><p>推荐方法：通过 Node.js 官网 下载 macOS 安装包（选择 LTS 版本）。</p></li><li><p>或使用 Homebrew 安装：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><ol start="3"><li>npm 常用命令</li></ol><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>npm init</td><td>初始化项目，生成 package.json</td></tr><tr><td>npm install &lt;包名&gt;</td><td>安装指定包（如 npm install hexo）</td></tr><tr><td>npm install -g &lt;包名&gt;</td><td>全局安装（如 npm install -g hexo-cli）</td></tr><tr><td>npm uninstall &lt;包名&gt;</td><td>卸载包</td></tr><tr><td>npm update</td><td>更新所有依赖包</td></tr><tr><td>npm list</td><td>查看已安装的包</td></tr></tbody></table><ol start="4"><li>npm 在 macOS 中的文件位置<br>全局安装的包：默认在 &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;<br>本地项目依赖：保存在项目目录的 node_modules&#x2F; 文件夹中。</li></ol><h2 id="Homebrew-和-npm-的区别"><a href="#Homebrew-和-npm-的区别" class="headerlink" title="Homebrew 和 npm 的区别"></a>Homebrew 和 npm 的区别</h2><table><thead><tr><th>工具</th><th>管理内容</th><th>适用场景</th><th>跨平台性</th></tr></thead><tbody><tr><td>npm</td><td>JavaScript&#x2F;Node.js 的代码库（包）</td><td>前端&#x2F;Node.js 开发（如 <code>react</code>, <code>hexo</code>）</td><td>全平台（macOS&#x2F;Windows&#x2F;Linux）</td></tr><tr><td>Homebrew</td><td>macOS&#x2F;Linux 的系统级软件和工具</td><td>安装开发环境、命令行工具（如 <code>git</code>, <code>python</code>）</td><td>主要 macOS&#x2F;Linux（Windows 需额外配置）</td></tr></tbody></table><p>案例：开发一个 Hexo 博客<br>用 Homebrew 安装 Git 和 Node.js：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git node</span><br></pre></td></tr></table></figure><p>用 npm 安装 Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="Hexo-配置及部署"><a href="#Hexo-配置及部署" class="headerlink" title="Hexo 配置及部署"></a>Hexo 配置及部署</h2><ol><li>确保 Hexo 已安装<br>如果尚未安装 Hexo，先全局安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="2"><li>进入 Hexo 博客目录<br>使用终端进入你的 Hexo 博客项目根目录（例如 <code>myblog</code>）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/myblog  <span class="comment"># 替换为你的 Hexo 博客路径</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建新文章<br>运行以下命令生成一篇新文章：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure><ul><li><p>默认会在 <code>source/_posts</code> 目录下生成一个 Markdown 文件（如 <code>文章标题.md</code>）。</p></li><li><p>如果希望自定义路径，可以使用：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post --path <span class="string">&quot;分类/子目录/文章标题&quot;</span> <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>编辑文章内容<br>用你喜欢的编辑器（如 VS Code、Typora 等）打开生成的 Markdown 文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code <span class="built_in">source</span>/_posts/文章标题.md  <span class="comment"># 使用 VS Code 打开</span></span><br></pre></td></tr></table></figure><p>或手动在 Finder 中找到文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/你的用户名/myblog/source/_posts/文章标题.md</span><br></pre></td></tr></table></figure><p>文件头部是 Front-matter（配置项），示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2023-10-01 14:30:00</span><br><span class="line">tags: [标签1, 标签2]</span><br><span class="line"><span class="section">categories: 分类名</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><ul><li>常用 Front-matter 参数：</li></ul><p><code>title</code>: 文章标题<br><code>date</code>: 发布时间（格式 <code>YYYY-MM-DD HH:mm:ss</code>）<br><code>tags</code>: 文章标签（多个标签用数组形式 <code>[tag1, tag2]</code>）<br><code>categories</code>: 文章分类（支持层级分类，如 <code>[父分类, 子分类]</code>）<br><code>cover</code>: 封面图片路径（如 <code>/images/cover.jpg</code>）</p><ol start="5"><li>本地预览<br>启动 Hexo 本地服务器，实时预览文章：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server  <span class="comment"># 或简写为 `hexo s`</span></span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost:4000</code> 查看效果（修改文章后会自动刷新）。</p><ol start="6"><li>生成静态文件并部署<br>完成编辑后，生成静态文件并部署到 GitHub Pages 或服务器：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean    <span class="comment"># 清除缓存</span></span><br><span class="line">hexo generate <span class="comment"># 或简写为 `hexo g`（生成静态文件）</span></span><br><span class="line">hexo deploy   <span class="comment"># 或简写为 `hexo d`（部署到配置的仓库）</span></span><br></pre></td></tr></table></figure><ul><li>部署前需配置 <code>_config.yml</code>：<br>确保 <code>deploy</code> 部分已设置正确的 Git 仓库地址：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/你的用户名/你的仓库.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span>  <span class="comment"># 或 gh-pages</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bolg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作一年学到了什么</title>
      <link href="/2024/08/25/%E5%B7%A5%E4%BD%9C%E4%B8%80%E5%B9%B4%E5%AD%A6%E5%88%B0%E4%BA%86%E4%BB%80%E4%B9%88/"/>
      <url>/2024/08/25/%E5%B7%A5%E4%BD%9C%E4%B8%80%E5%B9%B4%E5%AD%A6%E5%88%B0%E4%BA%86%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<p>不知不觉已经工作一年多了，正如我预想的一样，绝对不会在公司待很长时间，但也没有预想的那样待很短时间。在这段不长也不短的时间里，参与了很多项目，经历了很多事，也从中学到了很多经验，以下这些品质是我从中学到并感到收益不浅的。</p><h1 id="执行力"><a href="#执行力" class="headerlink" title="执行力"></a>执行力</h1><p>这应该是工作一年多来听到最多的一个要求，每次培训各位领导或多或少都会提到执行力在工作中的重要性。具体来讲，执行力又可以分为以下几点。</p><p>执行力直观上可与效率划等号，执行力高即办事效率高，当然是保证完成质量的前提下。但工作中不可能时刻都保持高效率，有时碰到棘手的问题无法解决，有时被当前的事情困住无法脱身。实际工作中总有意想不到的情况发生，此时则需做到“事事有回音”，及时向领导反馈遇到的问题，解释当前的状况，如任务实在紧急，领导必然会安排其他人处理。更多的情况是，在日常工作中紧急下发了一个任务，这时我们就得根据事情的轻重缓急来安排工作了，根据任务的紧急程度，我们可以选择是干完手头上的工作再干紧急任务，还是马上放下手头工作转向紧急任务，这都要根据实际情况而定。</p><h1 id="抗压能力"><a href="#抗压能力" class="headerlink" title="抗压能力"></a>抗压能力</h1><p>抗压能力是这一年以来听到第二多的要求，也是被很多人认为是职场 PUA 的常用话术，招聘看到这一点就默认和无偿加班、一人多岗等价。抗压能力讲再多也学不会，只有真正面临手头有处理不完的任务，那时候自然就进化出了抗压能力。工作了十几年的职场老鸟和新人的最大差别就在这里，去年不知道在梦里多少次梦到工作，但凡遇到点事就往心里放，导致休息的时候也想着工作上的问题，最近就明显感觉人麻木了，出问题就躺平、摆烂、无所谓，下班之后心情也不受工作的影响。所以，抗压能力主要不是运用在工作上，而是运用在个人生活上，抗压能力强才能更好享受生活。</p><p>我想一个良好的社会、工作环境是不需要特别强调抗压能力的，按照规范执行不会产生太多压力，只是太多时候、太多人不愿意按规范办事，甚至有意破坏规则，相互为难。</p><h1 id="沟通协作"><a href="#沟通协作" class="headerlink" title="沟通协作"></a>沟通协作</h1><p>沟通协作也是提到最多、最重要的能力之一。工作中的沟通和日常的沟通多少还有些差别。即使是工作中的沟通也是有差别的，对内的沟通和对外的沟通又是不一样的。</p><p>对内沟通又可以分出好几种来，按部门、按职级、按熟悉程度等，总的来讲有一些要求的共享的。逻辑是第一位的，无论和谁沟通，逻辑自洽都是必须的，即使是错，也要错的有道理，最怕被反问就沉默的情况。效率是第二位的，尤其是在和上级沟通的时候，保证逻辑自洽的同时，兼顾效率。第三是礼貌，内部沟通大部分同事间都是平级关系，并且不仅仅是只沟通一次，后续工作上遇到问题都是大家相互协作配合，因此基本的礼貌是必不可少的。</p><p>作为采购，大部分时间还是在和供应商沟通，有一段时间我觉得采购类似于传声筒，采购把工厂的要求传递给供应商，供应商又把他们的反馈传递给工厂，而采购就是工厂的出入口，是工厂和外部连接的桥梁。对外沟通和内部沟通又有点差异，采购代表公司作为甲方是强势方，并且对相关内容没有供应商清楚，有时候为了压价就不会过于考虑逻辑，沟通时的效率也是按照项目进度情况而定，在谈价过程中也很难保证双方在沟通时的平等地位。对优质供应商和劣质供应商，以上说谈到的都会根据情况灵活调整，有时候为了完成工作任务也会求着供应商帮忙。</p><h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p>在公司上班大部分时间都是被工作任务推着走，一般不会完全没有规划，公司制定整体的规划，然后自己再做一份具体的规划，比如我每个月底要提报次月的招标计划，次月就按照招标计划安排工作。计划提报是公司的制度安排，为的也是让员工有相应的工作规划。规划首先要确定一个整体的目标，比如本月要完成多少项目。其次规划要留有相应的余量，完全饱和的工作安排大概率没法完成，安排余量以应对突发情况并且保证完成质量。</p><h1 id="风险把控"><a href="#风险把控" class="headerlink" title="风险把控"></a>风险把控</h1><p>把控风险的第一要务是信息留痕，避免责任不明确，相互甩锅。其次是升级汇报，当然不是什么问题都去汇报，一些能解决的问题直接解决，实在解决不了的问题再去汇报。向上级汇报是一种风险的分摊，但凡后续出现问题，责任都是大家的，而不是一个人承担所有。</p><h1 id="学习态度"><a href="#学习态度" class="headerlink" title="学习态度"></a>学习态度</h1><p>本来想把这一点总结为学习能力，可是想了想还是总结为学习态度吧。学习能力很强的人也可能学习态度很差，反之同理。尤其对新入职场的朋友而言，面对陌生的环境，学习的态度可能比学习的能力更重要一些。在工作中把所有人都当作前辈，观察他们的工作方法，观察他们的为人处世，从中模仿、学习，渐渐摸索出适合自己的职场处事方式。从同事的上下班时间，对加班的态度，对领导下发任务的反应，和同事、客户沟通的态度，到具体工作流程的细节方面，都值得新员工观察。</p><h1 id="避免情绪化"><a href="#避免情绪化" class="headerlink" title="避免情绪化"></a>避免情绪化</h1><p>工作中最怕的就是碰到情绪化的人，没遇到问题大家都相安无事，一遇到问题简直就是灾难。面对这种情况也没什么好办法，越沟通火越大，这样只能等情绪平稳之后才能继续下一步，最终就是谁着急谁主动，反正双方谁都不好意思继续。</p><p>还有一种情绪化是畏难情绪，面对领导的畏难情绪，面对项目的畏难情绪，最终就是能拖一天是一天，实在是不能拖了才开始行动。</p><p>情绪这件事太难避免，和个人性格太相关了，在一些人眼里根本就没有什么畏难情绪，也不会明白为什么工作这么火大。</p><h1 id="学会展现"><a href="#学会展现" class="headerlink" title="学会展现"></a>学会展现</h1><p>两种情况下需要展现，一种是日常的工作汇报，另一种是关键时期的工作汇报（比如年终总结、转正、升职、调岗、比赛等）。</p><p>日常的工作汇报没那么正式，在固定的时间节点和直接上级按照周、月规划汇报一下工作安排即可，汇报尽量具体化、量化，用数据说话，避免空洞，是具体到项目的某些细节，还是到项目的整体就结束根据情况而定，避免实际工作量饱和但领导以为清闲的情况发生。</p><p>对于一些影响绩效考评和职业发展的关键汇报，首先要做到的是认真主动的对待，虽然日常工作很忙，但对关系自身利益和发展的机会还是要认真对待，一般付出与结果是正相关的。其次在汇报中表现得大方得体同样重要，毕竟汇报人只是参赛选手，最终的绝对权在裁判手中，给裁判留下好的印象才是核心要点。最后和日常汇报一样，尽量具体化和量化，展现实际的工作内容，给人留下具体的印象，不要说了一大堆，没有重点别人也记不住。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年度总结</title>
      <link href="/2023/12/31/2023%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2023/12/31/2023%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="过往"><a href="#过往" class="headerlink" title="过往"></a>过往</h1><p>时间过得真快，一年前的我绝对想不到现在的状态。</p><h1 id="校园"><a href="#校园" class="headerlink" title="校园"></a>校园</h1><p>上半年一直都在学校，用 django 捣鼓出了一个网站，到十月初的时候因为服务器到期就挂掉了。除此之外上半年没什么值得总结的。学校里的那些事，工作半年之后再看，简直算不得什么事。6月底离开学校，校园生活一切都到此结束。</p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>校招找到一份工作是为数不多值得庆幸的事。上班半年，虽然并不认同公司的文化，采购这个岗位也不适合我，但是作为初入社会的第一份工作，它至少可以让我养活自己，同时也让我了解了真实的工作环境。</p><p>7、8月在宁波是我最难受的一段时间，无法融入那里的环境，无论是工作上，还是生活上。</p><p>工作中虽然有很多无语的瞬间，但也没有幻想中那么狗血。由于内向的性格，在培训期间毫无表现，完全不想在大庭广众面前抛头露面（有害羞的心理，也有不屑的心理）。明明没有什么见解，却非要用公司的黑话讲一些外人听不懂的套话，为的只是争取更高的排名。由于我没有一点公司宣扬的狼性，以至于没收到一点正向反馈，整个培训都是处于吊车尾的位置。虽然人力说过培训有淘汰制度，我也被集体约谈过，回过头来看，这应该是职场PUA的惯用手段。</p><p>8月的流水线同样是一段难忘的经历，让我对 Made in China 有了不一样的认识，直观感受到了中国制造的产品价格低、品质差的原因。同时也让我看到了社会的另一面，流水线上很大一部分人还不到18岁，学校以实习、社会实践的名义集体组织来工厂打工，按照 16元&#x2F;小时 或者 18元&#x2F;小时 结算工资，社会招聘来的小时工大概 30元&#x2F;小时 。最让我印象深刻的是一位来自甘肃（也许是宁夏）的回族女孩，她是典型的假小子形象，男生一样的短发，干活比很多男生都利索，古灵精怪的神情。在我观察她一段时间之后还是不能确定她的性别，直到我问她才知道她是女孩。</p><p>生活上更是让我感到隔阂，同事都很 nice，在各方面都会相互照顾，集体宿舍的住宿环境仿佛还在延续大学的生活，但由于经历和三观的不同，这种很别扭的融洽氛围让我过得很拧巴（其实大学时就很讨厌集体宿舍）。更离谱的是，两个市场营销部的室友要上晚班，经常半夜才回寝室，但是我第二天8点要到流水线上干活，简直是让我崩溃的室友分配。</p><p>9月到南昌了，之后的生活就很重复了。每天7点半起床，早上8点半上班到晚上7点左右（也有更晚的时候），虽然下班时间是5点半，但从来没按时下过班，唯一一次按时下班是中秋、国庆双节假期前的最后一个工作日。最晚下班的一次是凌晨12点，盛美玲刚接手招标，不知道怎么提交策划，我也不懂物料的招标策划，她就拉着我一起搞到了12点。每天自己的空闲时间大概就1、2个小时，下班之后做饭、洗漱完差不多就9、10点了，刷一会儿手机就睡觉，九月到现在都是这个状态。</p><h1 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h1><p>对现在的状态其实并不怎么满意，尤其是工作上的无意义感，每天填些不知道有什么用的表，占用了正常的工作时间，然后每天加班。本来说有淡旺季，到了年底可以轻松一点，可是到了年底也没有轻松多少，有一种被欺骗的感觉。此外，招标的规矩也越来越多，但是项目数量却没有减少多少。各级领导也只会无限加码，完全不管员工的工作量。</p><h1 id="转变"><a href="#转变" class="headerlink" title="转变"></a>转变</h1><p>没工作前看的书都是人文社科，工作之后最大的问题是没时间看书，下班后的时间只想刷视频看奶头乐，就算看书也是看理财类的书。之前更关注宏观的东西，现在更关心怎样才能改善自己的生活，大学最常听的 不明白播客 ，工作之后也渐渐落下了很多期。<br>本来我是滴酒不沾的，在有领导的饭桌上，领导的一两句话就打破了我的原则。<br>学会了记账，每个月底都会梳理一下当月的开支。<br>认识的人更多了，性格也比以前外向了一点点。倒不是说客户认识的多，客户都是商务往来，为公司打工，私底下也不会有太多交集。而是身边的同事认识的多了，虽然下班之后也不常联系。<br>独居生活，从公司宿舍搬了出来，大大提高了我的幸福感。<br>生活<br>工作日只有一点点自己的时间，完全无暇顾及所谓的生活。即使是假期，如果谁发来一条消息，我还是会回复，假期也不能全身心的放松。工作逐渐渗透进我的生活，工作和生活的边界逐渐模糊。</p><p>此外，没有可以一起去玩的朋友。明天元旦节，想找个人一起逛逛，结果不知道找谁。</p><h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>我打算24年5、6月份的时候离职，4月中旬提离职，5月中旬离开。按照惯例，领导肯定不会爽快的同意，但是我也不打算让步。休息10几天，6月去找新工作。采购不适合我，目前的规划是转行做嵌入式，也许会换个城市，去更南的地方，广州附近，深圳不知道怎么样？珠海？中山？</p><p>不想干采购的几个原因：</p><p>性格决定我在采购这条路干不成。首先，我不会屌供应商，也不想屌。我的心态是打工人何苦为难打工人。其次，我不想抽烟、喝酒，可是采购作为一份商务性质的工作，不掌握一些社交工具很难混得开。<br>采购这份职业的门槛太低，我更想干有技术门槛的职业。创造也许会让工作不那么无意义。<br>民营企业的企业文化真是让我无语，只想安安静静地干活都不行，总是要写些莫名其妙的东西。<br>我现在更大的问题是没时间去学相关的技术，下班之后只想休息，如果加班（不需要如果，每天都在加班），回来就只有睡觉的时间了。</p><p>希望找到一个可以交流的朋友。一个人的胡思乱想越想越焦虑，有时候真的需要一些交流，可是有时候又觉得社交会成为一种负担。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对大学老师一些罗里吧嗦的批评</title>
      <link href="/2023/06/22/%E5%AF%B9%E5%A4%A7%E5%AD%A6%E8%80%81%E5%B8%88%E4%B8%80%E4%BA%9B%E7%BD%97%E9%87%8C%E5%90%A7%E5%97%A6%E7%9A%84%E6%89%B9%E8%AF%84/"/>
      <url>/2023/06/22/%E5%AF%B9%E5%A4%A7%E5%AD%A6%E8%80%81%E5%B8%88%E4%B8%80%E4%BA%9B%E7%BD%97%E9%87%8C%E5%90%A7%E5%97%A6%E7%9A%84%E6%89%B9%E8%AF%84/</url>
      
        <content type="html"><![CDATA[<p>经过十几年的中小学教育，我自认为已经被学校的教育方式糟蹋得不成样子，幸而那时年幼无知拥有一颗麻木的心，虽整日听老师编织幻梦，却只知吃喝拉撒，毫不反思其害我不浅。中学后期虽隐约直觉到教育对我三观的戕害，但处于奔腾的教育浪潮之中，我也只能顺着泥沙裹挟前进。</p><p>正是在这懵懂与觉醒边缘之际，我进入了大学。回首四年的大学时光，越发清晰所处教育环境的荒谬，对大学及老师完成了彻底地祛魅。四年前进入大学校园还抱有一丝浪漫的幻想，现在只想尽快逃离虚假的象牙塔。四年前新生典礼上对各位硕博老师投向仰慕的眼光，抱着老师吃过的盐比我吃过的饭还多的心态去上课，结果发现老师们吃得是劣质粗盐，把我齁得够呛。</p><p>尤其是最后一学期，参与了毕业论文指导全过程，我总算明白为什么多数老师上课只会念包浆课件了，他们缺乏的不是专业知识，而是更基本的语言组织能力。他们连文字表达都不过关，内容稍微一长就不知道怎样组织语言，不知道怎样顺畅表达，更不要说遣词造句、逻辑通顺了。对于这种老师还要啥自行车呢？</p><p>水平之低简直让我叹为观止！！！</p><p>除了能力之外，更让我惊掉下巴的还有老师们的三观。负责党团一类政治思想工作的老师自然排除在外，绝对真理的思想改造功能是不容质疑的。（参见毕业答辩实录一文）由于我对上位者总是持厌而远之的态度，所以与他们接触不多，但是同在屋檐下，难免有些交集，一些让我印象深刻的事件，我在此处记得多少写多少。</p><ol><li>疫情期间，支付宝打卡定位异常，我被误判经过风险区。我不想去做核酸检测，向H老师说明情况，他说“反正又不要钱，就去做一次”。</li></ol><p>对此我没多说什么，老老实实去做了检测，但是我心里想老师不要纳税吗？为什么一点纳税人的意识都没有？更何况还是一位大学工商管理的老师，连这点基本的公民意识都没有？也许是体制内的工作福利太好，以至于不用斤斤计较区区的五险一金，更不在乎政府钱从哪里来，又到哪里去，毕竟都是一条绳上的蚂蚱。</p><ol start="2"><li>还是上面这位老师。几个月之前，因为有同学没及时完成学院的问卷，该师说出如下肺腑之言“我没什么权力，但最后毕业证在我手上。拖着不做的同学最后你要毕业证时候，请你三顾茅庐来找我。”</li></ol><p>这就是该师两面派的嘴脸，先假模假式地说自己“没什么权力”（并且不知道权利和权力的区别），然后再拿毕业证要挟不配合的同学。做出这种又当又立婊子行为的人也配当老师？希望高校尽快引入末位淘汰制，把这种货色清除出教师队伍。</p><p>临近毕业这种恶心事儿实在太多，加之今年就业率并不好看，参加过就业动员会的同学听过、见过的暴论应该比我多，我就不在这里转述二手货了。不过我有一点小小的疑问，或者说是阴谋论。平常不见老师关心学生，怎么一到毕业就关心起学生的就业来，恨不得让学生随便找一个临时工签就业协议。我只听过啃老族，可没听过啃老师族，如此急着让学生找工作真的只是为了就业率？这里真的没有利益瓜葛吗？</p><p>既然说到就业率，那就再说一个小发现吧。几个月前，学校极力催促未找到工作的同学参加招聘会，为了了解学校往年的就业情况，我把学校近几年发布的就业报告大致浏览了一遍。<a href="https://nit.jysd.com/news/view/aid/368728/tag/tzgg">21届毕业生的就业报告中</a>，我发现了一个让我不解的矛盾处，21届旅游管理专业就业率100%。矛盾一，2021年正处于疫情时期，虽然不是最严重的时期，但是封控的大环境还是客观存在的，但是旅游管理专业居然能扭转不利局面，勇夺全校就业率榜首，让我感到不解。矛盾二，旅游管理专业正好是我所读学院下的专业，但是该专业在我就读时已被取消，就业率既然如此之高，为什么还要取消这么一个不愁找工作的好专业呢？</p><p>对于受过我校专业学术训练的毕业生来讲，矛盾一实在是太好解释了，无非是改个数字而已。只不过100%就业率未免太假，而学校之所以敢这么编，很大可能是因为取消了这个专业，反正也不再招生，毕业生也人去楼空，学校可不就一手遮天，想怎么改就怎么改了。</p><p>最后再说几句毕业论文中让我抓狂问题。老师们都有十几年的教学经验了，也指导了十几批毕业生了，可是那个论文模板做得还是那么差，指导老师一套标准，论文指导组老师一套标准，学院一套标准，深入贯彻“百花齐放，百家争鸣”文化方针，主打一个多样性。加上学校的论文系统，导出来的文件格式缺斤少两。这导致的结果就是各种说法互相冲突，改好的论文在指导老师这里通过了，交到学院去又出了问题。离校前几天，因为论文格式差点没蚌住。😅</p><p>仅仅只凭上面几件事，再结合课堂上的教课效果，与四年前的崇拜形成鲜明对比，我现在对老师的人品、能力完全是持怀疑态度的。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学校 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
